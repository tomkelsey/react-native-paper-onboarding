{"version":3,"sources":["IndicatorsContainer.tsx"],"names":["React","useMemo","useCallback","memo","Animated","Indicator","styles","IndicatorsContainerComponent","data","animatedIndex","animatedIndicatorsContainerPosition","indicatorSize","indicatorBackgroundColor","indicatorBorderColor","safeInsets","containerWidth","length","containerStyle","container","width","height","bottom","transform","translateX","renderIndicators","map","item","index","IndicatorsContainer"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,IAAtC,QAAkD,OAAlD;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAGA,MAAMC,4BAA4B,GAAG,CAAC;AACpCC,EAAAA,IADoC;AAEpCC,EAAAA,aAFoC;AAGpCC,EAAAA,mCAHoC;AAIpCC,EAAAA,aAJoC;AAKpCC,EAAAA,wBALoC;AAMpCC,EAAAA,oBANoC;AAOpCC,EAAAA;AAPoC,CAAD,KAQL;AAC9B;AACA,QAAMC,cAAc,GAAGd,OAAO,CAAC,MAAM;AACnC,WAAOO,IAAI,CAACQ,MAAL,GAAcL,aAArB;AACD,GAF6B,EAE3B,CAACH,IAAD,EAAOG,aAAP,CAF2B,CAA9B,CAF8B,CAM9B;;AACA,QAAMM,cAAmB,GAAGhB,OAAO,CACjC,MAAM,CACJK,MAAM,CAACY,SADH,EAEJ;AACEC,IAAAA,KAAK,EAAEJ,cADT;AAEEK,IAAAA,MAAM,EAAET,aAFV;AAGEU,IAAAA,MAAM,EAAEP,UAAU,CAACO,MAHrB;AAIEC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAEb;AAAd,KAAD;AAJb,GAFI,CAD2B,EAUjC,CACEK,cADF,EAEEJ,aAFF,EAGED,mCAHF,EAIEI,UAJF,CAViC,CAAnC,CAP8B,CAyB9B;;AACA,QAAMU,gBAAgB,GAAGtB,WAAW,CAClC,MACEM,IAAI,CAACiB,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,wBACE,oBAAC,SAAD;AACE,MAAA,GAAG,EAAG,QAAOA,KAAM,EADrB;AAEE,MAAA,aAAa,EAAEhB,aAFjB;AAGE,MAAA,wBAAwB,EAAEC,wBAH5B;AAIE,MAAA,oBAAoB,EAAEC,oBAJxB;AAKE,MAAA,KAAK,EAAEc,KALT;AAME,MAAA,IAAI,EAAED,IANR;AAOE,MAAA,aAAa,EAAEjB;AAPjB,MADF;AAWD,GAZD,CAFgC,EAelC;AACA,GAACD,IAAD,EAAOG,aAAP,EAAsBC,wBAAtB,EAAgDC,oBAAhD,CAhBkC,CAApC;AAmBA,sBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEI;AAAtB,KAAuCO,gBAAgB,EAAvD,CADF;AAGD,CAxDD;;AA0DA,MAAMI,mBAAmB,gBAAGzB,IAAI,CAACI,4BAAD,CAAhC;AAEA,eAAeqB,mBAAf","sourcesContent":["import React, { useMemo, useCallback, memo } from 'react';\nimport Animated from 'react-native-reanimated';\nimport Indicator from '../indicator';\nimport { styles } from './styles';\nimport type { IndicatorsContainerProps } from '../../types';\n\nconst IndicatorsContainerComponent = ({\n  data,\n  animatedIndex,\n  animatedIndicatorsContainerPosition,\n  indicatorSize,\n  indicatorBackgroundColor,\n  indicatorBorderColor,\n  safeInsets,\n}: IndicatorsContainerProps) => {\n  // variables\n  const containerWidth = useMemo(() => {\n    return data.length * indicatorSize;\n  }, [data, indicatorSize]);\n\n  // style\n  const containerStyle: any = useMemo(\n    () => [\n      styles.container,\n      {\n        width: containerWidth,\n        height: indicatorSize,\n        bottom: safeInsets.bottom,\n        transform: [{ translateX: animatedIndicatorsContainerPosition }],\n      },\n    ],\n    [\n      containerWidth,\n      indicatorSize,\n      animatedIndicatorsContainerPosition,\n      safeInsets,\n    ]\n  );\n\n  // renders\n  const renderIndicators = useCallback(\n    () =>\n      data.map((item, index) => {\n        return (\n          <Indicator\n            key={`item-${index}`}\n            indicatorSize={indicatorSize}\n            indicatorBackgroundColor={indicatorBackgroundColor}\n            indicatorBorderColor={indicatorBorderColor}\n            index={index}\n            item={item}\n            animatedIndex={animatedIndex}\n          />\n        );\n      }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data, indicatorSize, indicatorBackgroundColor, indicatorBorderColor]\n  );\n\n  return (\n    <Animated.View style={containerStyle}>{renderIndicators()}</Animated.View>\n  );\n};\n\nconst IndicatorsContainer = memo(IndicatorsContainerComponent);\n\nexport default IndicatorsContainer;\n"]}