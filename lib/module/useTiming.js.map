{"version":3,"sources":["useTiming.ts"],"names":["Animated","sub","add","or","block","cond","eq","set","stopClock","and","not","clockRunning","startClock","lessThan","greaterThan","abs","timing","onChange","I18nManager","State","useClock","useValue","useMemo","interpolate","interpolateV1","interpolateNode","interpolateV2","require","Easing","EasingV1","EasingNode","EasingV2","useTiming","animatedStaticIndex","animatedOverrideIndex","value","velocity","state","size","screenWidth","clock","isManuallyAnimated","config","toValue","Value","duration","easing","out","exp","animationState","finished","position","frameTime","time","valueClamp","inputRange","outputRange","isRTL","extrapolate","Extrapolate","CLAMP","velocityClamp","isTimingInterrupted","BEGAN","finishTiming","UNDETERMINED","shouldAnimate","shouldReset","shouldAnimateNext","animatedPosition","ACTIVE","END"],"mappings":"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","sourcesContent":["import Animated, {\n  sub,\n  add,\n  or,\n  block,\n  cond,\n  eq,\n  set,\n  stopClock,\n  and,\n  not,\n  clockRunning,\n  startClock,\n  lessThan,\n  greaterThan,\n  abs,\n  timing,\n  onChange,\n} from 'react-native-reanimated';\nimport { I18nManager } from 'react-native';\nimport { State } from 'react-native-gesture-handler';\nimport { useClock, useValue } from 'react-native-redash';\nimport { useMemo } from 'react';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\nconst {\n  Easing: EasingV1,\n  EasingNode: EasingV2,\n} = require('react-native-reanimated');\nconst Easing = EasingV2 || EasingV1;\n\ninterface useTimingProps {\n  value: Animated.Adaptable<number>;\n  animatedStaticIndex: Animated.Value<number>;\n  animatedOverrideIndex: Animated.Value<number>;\n  velocity: Animated.Adaptable<number>;\n  state: Animated.Value<State>;\n  offset?: Animated.Value<number>;\n  deceleration?: number;\n  size: number;\n  screenWidth: number;\n}\n\nexport const useTiming = ({\n  animatedStaticIndex,\n  animatedOverrideIndex,\n  value,\n  velocity,\n  state,\n  size,\n  screenWidth,\n}: useTimingProps) => {\n  const clock = useClock();\n  const isManuallyAnimated = useValue(0);\n\n  const config = useMemo(\n    () => ({\n      toValue: new Animated.Value(0),\n      duration: 500,\n      easing: Easing.out(Easing.exp),\n    }),\n    []\n  );\n\n  const animationState = useMemo(\n    () => ({\n      finished: new Animated.Value(0),\n      position: new Animated.Value(0),\n      frameTime: new Animated.Value(0),\n      time: new Animated.Value(0),\n    }),\n    []\n  );\n\n  const valueClamp = useMemo(\n    () =>\n      interpolate(value, {\n        inputRange: [screenWidth * -1, 0, screenWidth],\n        outputRange: I18nManager.isRTL ? [-1, 0, 1] : [1, 0, -1],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      }),\n    [value, screenWidth]\n  );\n\n  const velocityClamp = useMemo(\n    () =>\n      interpolate(velocity, {\n        inputRange: [screenWidth * -2, 0, screenWidth * 2],\n        outputRange: I18nManager.isRTL ? [-0.5, 0, 0.5] : [0.5, 0, -0.5],\n        extrapolate: Animated.Extrapolate.CLAMP,\n      }),\n    [screenWidth, velocity]\n  );\n\n  const isTimingInterrupted = and(eq(state, State.BEGAN), clockRunning(clock));\n  const finishTiming = useMemo(\n    () => [\n      set(animatedStaticIndex, config.toValue),\n      set(animatedOverrideIndex, config.toValue),\n      set(animationState.frameTime, 0),\n      set(animationState.time, 0),\n      set(state, State.UNDETERMINED),\n      set(isManuallyAnimated, 0),\n      stopClock(clock),\n    ],\n    [\n      state,\n      animatedOverrideIndex,\n      animatedStaticIndex,\n      animationState.frameTime,\n      animationState.time,\n      clock,\n      config.toValue,\n      isManuallyAnimated,\n    ]\n  );\n\n  const shouldAnimate = useMemo(\n    () =>\n      and(\n        not(and(eq(animatedStaticIndex, 0), lessThan(valueClamp, 0))),\n        not(and(eq(animatedStaticIndex, size - 1), greaterThan(valueClamp, 0)))\n      ),\n    [animatedStaticIndex, size, valueClamp]\n  );\n  const shouldReset = useMemo(\n    () => not(greaterThan(add(abs(valueClamp), abs(velocityClamp)), 0.5)),\n    [valueClamp, velocityClamp]\n  );\n  const shouldAnimateNext = useMemo(\n    () =>\n      greaterThan(\n        add(animationState.position, velocityClamp),\n        animatedStaticIndex\n      ),\n    [animatedStaticIndex, animationState.position, velocityClamp]\n  );\n\n  const animatedPosition = useMemo(\n    () =>\n      block([\n        cond(isTimingInterrupted, finishTiming),\n        cond(\n          eq(state, State.ACTIVE),\n          cond(\n            and(\n              not(and(eq(animatedStaticIndex, 0), lessThan(valueClamp, 0))),\n              not(\n                and(\n                  eq(animatedStaticIndex, size - 1),\n                  greaterThan(valueClamp, 0)\n                )\n              )\n            ),\n            [\n              set(animationState.finished, 0),\n              set(\n                animationState.position,\n                add(animatedStaticIndex, valueClamp)\n              ),\n            ]\n          )\n        ),\n\n        onChange(animatedOverrideIndex, [\n          set(isManuallyAnimated, 1),\n          set(animationState.finished, 0),\n        ]),\n\n        cond(or(eq(state, State.END), isManuallyAnimated), [\n          cond(and(not(clockRunning(clock)), not(animationState.finished)), [\n            cond(\n              isManuallyAnimated,\n              set(config.toValue, animatedOverrideIndex),\n              cond(\n                or(shouldReset, not(shouldAnimate)),\n                set(config.toValue, animatedStaticIndex),\n                cond(\n                  shouldAnimateNext,\n                  set(config.toValue, add(animatedStaticIndex, 1)),\n                  set(config.toValue, sub(animatedStaticIndex, 1))\n                )\n              )\n            ),\n            set(animationState.finished, 0),\n            set(animationState.frameTime, 0),\n            set(animationState.time, 0),\n            startClock(clock),\n          ]),\n          timing(clock, animationState, config),\n          cond(animationState.finished, finishTiming),\n        ]),\n\n        animationState.position,\n      ]),\n    [\n      size,\n      state,\n      animatedOverrideIndex,\n      animatedStaticIndex,\n      animationState,\n      clock,\n      config,\n      finishTiming,\n      isManuallyAnimated,\n      isTimingInterrupted,\n      shouldAnimate,\n      shouldAnimateNext,\n      shouldReset,\n      valueClamp,\n    ]\n  );\n  return animatedPosition;\n};\n"]}